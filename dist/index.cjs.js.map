{"version":3,"file":"index.cjs.js","sources":["../src/core/CopilotInstanceManager.ts","../src/core/hooks/useCopilot.ts","../src/components/CopilotProvider.tsx","../src/types/CopilotTypes.ts","../src/core/hooks/useCopilotTools.ts","../src/utills/validateBotName.ts","../src/core/waitForCopilot.ts","../src/components/Copilot.tsx","../src/core/hooks/useCopilotUser.ts","../src/types/telemetry/TelemetryEvent.ts","../src/types/telemetry/TelemetryBus.ts","../src/core/hooks/useTelemetry.ts","../src/core/hooks/useCopilotContext.ts"],"sourcesContent":["import type { CopilotAPI } from '../types/CopilotTypes';\n\nexport const copilotInstances = new Map<string, CopilotAPI>();","import { useState, useEffect } from 'react';\nimport { copilotInstances } from '../CopilotInstanceManager';\nimport type { CopilotAPI, ToolDefinition } from '../../types/CopilotTypes';\n\nconst MAX_WAIT_TIME = 5000; // in ms\n\nexport const useCopilot = (idOrIndex?: string | number) => {\n  const [copilot, setCopilot] = useState<CopilotAPI>();\n  const [hasErrored, setHasErrored] = useState(false);\n\n  useEffect(() => {\n    const interval = 100;\n    const maxTries = MAX_WAIT_TIME / interval;\n    let tries = 0;\n\n    const id = setInterval(() => {\n    const keys = Array.from(copilotInstances.keys());\n    const key =\n      idOrIndex === undefined\n        ? keys[0]\n        : typeof idOrIndex === 'number'\n        ? keys[idOrIndex]\n        : idOrIndex;\n        \n      if (key && copilotInstances.has(key)) {\n        setCopilot(copilotInstances.get(key));\n        clearInterval(id);\n      } else if (++tries >= maxTries) {\n        setHasErrored(true);\n        clearInterval(id);\n      }\n    }, interval);\n\n    return () => clearInterval(id);\n  }, [idOrIndex]);\n\n  useEffect(() => {\n    if (hasErrored) {\n      console.error(`[useCopilot] Copilot \"${String(idOrIndex ?? '0')}\" not found`);\n    }\n  }, [hasErrored, idOrIndex]);\n\n  const addTool = (toolOrTools: ToolDefinition | ToolDefinition[]) => {\n    if (!copilot?.tools?.add) return;\n\n    const tools = Array.isArray(toolOrTools) ? toolOrTools : [toolOrTools];\n    tools.forEach(tool => copilot.tools.add(tool));\n  };\n\n  return {\n    show: () => copilot?.show(),\n    hide: () => copilot?.hide(),\n    destroy: () => copilot?.destroy(),\n    addTool,\n    removeTool: (name: string) => copilot?.tools?.remove(name),\n    removeAllTools: () => copilot?.tools?.removeAll?.(),\n    setUser: (user: Record<string, any>) => copilot?.users?.set(user),\n    unsetUser: () => copilot?.users?.unset(),\n    setContext: (context: Record<string, any>) => copilot?.context?.set(context),\n    unsetContext: () => copilot?.context?.unset(),\n    raw: copilot,\n  };\n};","// Updated CopilotProvider with automatic mode detection\nimport React, { createContext, useContext } from 'react';\n\nexport interface SingleInstance {\n  token: string;\n  config?: Record<string, any>;\n  scriptUrl?: string;\n  botName?: string;\n}\n\nexport interface MultiInstance {\n  instances: SingleInstance[];\n}\n\ninterface SharedProps {\n  children: React.ReactNode;\n}\n\ntype CopilotProviderProps = (SingleInstance | MultiInstance) & SharedProps;\n\ntype CopilotContextType = {\n  getInstanceConfig: (botName?: string | number) => SingleInstance | undefined;\n};\n\nconst CopilotContext = createContext<CopilotContextType | null>(null);\n\nexport const useCopilotProvider = () => {\n  const context = useContext(CopilotContext);\n  if (!context) {\n    throw new Error('useCopilotProvider must be used within CopilotProvider');\n  }\n  return context;\n};\n\nexport const CopilotProvider = (props: CopilotProviderProps) => {\n  const getInstanceConfig = (botName?: string | number): SingleInstance | undefined => {\n    // MULTI mode\n    if ('instances' in props && Array.isArray(props.instances)) {\n      if (typeof botName === 'number') {\n        return props.instances[botName];\n      }\n      if (typeof botName === 'string') {\n        return props.instances.find(instance => instance.botName === botName);\n      }\n      // Default to first instance if no botName specified\n      return props.instances[0];\n    }\n    // SINGLE mode\n    else if ('token' in props) {\n      const { token, config, scriptUrl, botName: configBotName } = props;\n      return {\n        token,\n        config,\n        scriptUrl,\n        botName: configBotName\n      };\n    }\n    return undefined;\n  };\n\n  const contextValue: CopilotContextType = {\n    getInstanceConfig\n  };\n\n  return (\n    <CopilotContext.Provider value={contextValue}>\n      {props.children}\n    </CopilotContext.Provider>\n  );\n};\n","export const defaultBotName = 'copilot'; \n   export type ToolParameter = {\n    type: string;\n    description?: string;\n  };\n  \n  export type ToolDefinition = {\n    name: string;\n    description: string;\n    parameters?: {\n      type: 'object';\n      properties: Record<string, ToolParameter>;\n      required?: string[];\n    };\n    timeout?: number;\n    handler: (args: Record<string, any>) => Promise<any> | any;\n  };\n  \n  export type CopilotAPI = {\n    show: () => void;\n    hide: () => void;\n    destroy: () => void;\n    tools: {\n      add: (tool: ToolDefinition | ToolDefinition[]) => void;\n      remove: (name: string) => void;\n      removeAll?: () => void;\n    };\n    users: {\n      set: (user: Record<string, any>) => void;\n      unset: () => void;\n    };\n    context: {\n      set: (context: Record<string, any>) => void;\n      unset: () => void;\n    };\n  };","import { useEffect } from 'react';\nimport { useCopilot } from './useCopilot';\nimport type { ToolDefinition } from '../../types/CopilotTypes';\nimport { defaultBotName } from '../../types/CopilotTypes';\n\ninterface Options {\n  removeOnUnmount?: boolean;\n  idOrIndex?: string | number;\n}\n\n// Track which instances have tools added via useCopilotTool\nconst instancesWithHookTools = new Set<string>();\n\nexport const useCopilotTool = (\n  toolOrTools: ToolDefinition | ToolDefinition[],\n  options?: Options\n) => {\n  const { addTool, removeTool } = useCopilot(options?.idOrIndex);\n\n  useEffect(() => {\n    const tools = Array.isArray(toolOrTools) ? toolOrTools : [toolOrTools];\n    \n    // Track this instance as having tools from hook\n    const instanceKey = options?.idOrIndex?.toString() || defaultBotName;\n    instancesWithHookTools.add(instanceKey);\n\n    addTool?.(tools);\n\n    return () => {\n      if (options?.removeOnUnmount) {\n        tools.forEach(tool => {\n          if (tool?.name) removeTool?.(tool.name);\n        });\n        // Remove from tracking when unmounting\n        instancesWithHookTools.delete(instanceKey);\n      }\n    };\n  }, [addTool, removeTool, toolOrTools, options?.removeOnUnmount, options?.idOrIndex]);\n};\n\n// Export function to check if instance has tools from hook\nexport const hasHookTools = (idOrIndex?: string | number): boolean => {\n  const instanceKey = idOrIndex?.toString() || defaultBotName;\n  return instancesWithHookTools.has(instanceKey);\n};","export const validateBotName = (botName: string): string => {\n    const isValid = /^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(botName);\n    if (!isValid) {\n      throw new Error(\n        `[CopilotProvider] Invalid botName \"${botName}\". It must start with a letter, $, or _, and contain only letters, numbers, $, or _.`\n      );\n    }\n    return botName;\n  };","import type { CopilotAPI } from '../types/CopilotTypes';\nimport { copilotInstances } from '../core/CopilotInstanceManager';\n\nexport const waitForCopilot = (\n  botName: string,\n  timeout = 5000,\n  interval = 100\n): Promise<CopilotAPI | null> => {\n  return new Promise((resolve) => {\n    if (typeof window === 'undefined') return resolve(null);\n\n    let tries = 0;\n    const maxTries = Math.ceil(timeout / interval);\n\n    const scriptId = `copilot-loader-script${botName === 'copilot' ? '' : `-${botName}`}`;\n\n    const cleanup = () => {\n      const windowAny = window as any;\n        if(windowAny[`_${botName}_ready`]) {\n          windowAny[botName]?.(\"destroy\");\n          windowAny[botName] = null;\n          windowAny[`_${botName}_ready`] = false;\n          copilotInstances.delete(botName);\n          \n          const element = document.getElementById(scriptId);\n          const elementObjet = document.getElementById(botName);\n          if (element) {\n            element.remove();\n            elementObjet?.remove();\n          }\n        }\n    }\n\n    const check = () => {\n      const copilotFn = (window as any)[botName];\n      const isReady = (window as any)[`_${botName}_ready`];\n\n      const hasRealAPI =\n        typeof copilotFn === 'function' &&\n        typeof copilotFn.tools?.add === 'function' &&\n        typeof copilotFn.users?.set === 'function' &&\n        typeof copilotFn.context?.set === 'function';\n\n      if (isReady && hasRealAPI) {\n        const copilotAPI: CopilotAPI = {\n          show: () => copilotFn('event', 'open'),\n          hide: () => copilotFn('event', 'close'),\n          tools: {\n            add: (tools) => copilotFn.tools.add(tools),\n            remove: (name) => copilotFn.tools.remove?.(name),\n            removeAll: () => copilotFn.tools.removeAll?.(),\n          },\n          users: {\n            set: (user) => copilotFn.users.set(user),\n            unset: () => copilotFn.users.unset(),\n          },\n          context: {\n            set: (context) => copilotFn.context.set(context),\n            unset: () => copilotFn.context.unset(),\n          },\n          destroy: () => cleanup(),\n        };\n\n        return resolve(copilotAPI);\n      }\n\n      if (++tries >= maxTries) {\n        console.warn(`[${botName}] Copilot not ready after timeout.`);\n        return resolve(null);\n      }\n\n      setTimeout(check, interval);\n    };\n\n    check();\n  });\n};","import { useEffect } from 'react';\nimport { useCopilot } from '../core/hooks/useCopilot';\nimport { useCopilotProvider } from './CopilotProvider';\nimport { hasHookTools } from '../core/hooks/useCopilotTools';\nimport { validateBotName } from '../utills/validateBotName';\nimport { waitForCopilot } from '../core/waitForCopilot';\nimport { copilotInstances } from '../core/CopilotInstanceManager';\nimport { defaultBotName, type ToolDefinition, type CopilotAPI } from '../types/CopilotTypes';\n\ntype Props = {\n  tools?: ToolDefinition | ToolDefinition[];\n  botName?: string | number; // string name or index\n};\n\nconst injectCopilotScript = (\n  key: string,\n  token: string,\n  config: Record<string, any> = {},\n  scriptUrl?: string,\n) => {\n  const safeBotName = validateBotName(key);\n  const scriptId = `copilot-loader-script${safeBotName === 'copilot' ? '' : `-${safeBotName}`}`;\n  //if (document.getElementById(scriptId)) return;\n\n  const inlineScript = document.createElement('script');\n  inlineScript.id = scriptId;\n  inlineScript.type = 'application/javascript';\n  inlineScript.innerHTML = `\n    (function(w,d,s,o,f,js,fjs){\n      w[o]=w[o]||function(){\n        (w[o].q=w[o].q||[]).push(arguments);\n      };\n      js=d.createElement(s), fjs=d.getElementsByTagName(s)[0];\n      js.id=o;\n      js.src=\"${scriptUrl ?? 'https://script.copilot.live/v1/copilot.min.js'}?tkn=${token}\";\n      js.async=1;\n      js.referrerPolicy=\"origin\";\n      fjs.parentNode.insertBefore(js,fjs);\n    })(window,document,\"script\",\"${safeBotName}\");\n\n    ${safeBotName}(\"init\", ${JSON.stringify(config)}, function () {\n      window[\"_${safeBotName}_ready\"] = true;\n\n      // Telemetry integration\n    ${safeBotName}.on(\"telemetry\", function(event) {\n      window.dispatchEvent(new CustomEvent(\"copilot:telemetry\", {\n        detail: {\n          type: event?.type || \"telemetry:unknown\",\n          parameters: event?.parameters || {}\n        }\n      }));\n    });\n\n    });\n  `;\n\n  document.head.appendChild(inlineScript);\n\n  waitForCopilot(safeBotName).then((copilot: CopilotAPI | null) => {\n    if (copilot) {\n      copilotInstances.set(key, copilot);\n    }\n  });\n};\n\nexport const Copilot = ({ tools, botName }: Props) => {\n  const { getInstanceConfig } = useCopilotProvider();\n  const { addTool, removeAllTools } = useCopilot(botName);\n\n  const cleanup = (finalKey: string, scriptId: string) => {\n    const windowAny = window as any;\n      if(windowAny[`_${finalKey}_ready`]) {\n        windowAny[finalKey]?.(\"destroy\");\n        windowAny[finalKey] = null;\n        windowAny[`_${finalKey}_ready`] = false;\n        copilotInstances.delete(finalKey);\n        \n        const element = document.getElementById(scriptId);\n        const elementObjet = document.getElementById(finalKey);\n        if (element) {\n          element.remove();\n          elementObjet?.remove();\n        }\n      }\n  }\n\n  // Handle Copilot instance lifecycle\n  useEffect(() => {\n    const instanceKey = typeof botName === 'string' \n      ? botName \n      : typeof botName === 'number'\n        ? `${defaultBotName}${botName}`\n        : defaultBotName;\n\n    const instanceConfig = getInstanceConfig(botName);\n    if (!instanceConfig) {\n      console.error(`[Copilot] No configuration found for botName: ${botName}`);\n      return;\n    }\n\n    const { token, config = {}, scriptUrl, botName: configBotName } = instanceConfig;\n    const finalKey = configBotName || instanceKey;\n    const scriptId = `copilot-loader-script${finalKey === 'copilot' ? '' : `-${finalKey}`}`;\n\n    // Only inject script if instance doesn't exist\n    if (!copilotInstances.has(finalKey) && !document.getElementById(scriptId)) {\n      injectCopilotScript(finalKey, token, config, scriptUrl);\n    }\n\n    // Cleanup function\n    return () => {\n      if(config?.element){\n        cleanup(finalKey, scriptId)\n      }\n    };\n  }, [botName, getInstanceConfig]);\n\n  // Handle tools management\n  useEffect(() => {\n    if (!tools || !addTool || hasHookTools(botName)) return;\n    \n    addTool(tools);\n    return () => {\n      if (typeof removeAllTools === 'function') {\n        removeAllTools();\n      }\n    };\n  }, [tools, addTool, removeAllTools, botName]);\n\n  return null;\n};","import { useEffect } from 'react';\nimport { useCopilot } from './useCopilot';\n\ninterface Options {\n  unsetOnUnmount?: boolean;\n  idOrIndex?: string | number;\n}\n\nexport const useCopilotUser = (\n  user: Record<string, any>,\n  options?: Options\n) => {\n  const { setUser, unsetUser } = useCopilot(options?.idOrIndex);\n\n  useEffect(() => {\n    setUser?.(user);\n\n    return () => {\n      if (options?.unsetOnUnmount) {\n        unsetUser?.();\n      }\n    };\n  }, [setUser, unsetUser, user, options?.unsetOnUnmount]);\n};","// TelemetryEvent.ts\n\nexport interface Parameters {\n  [key: string]: any;\n}\n\nexport interface BaseTelemetryEvent {\n  name: string;\n  parameters: Parameters;\n}\n\nexport interface OtherTelemetryEvent extends BaseTelemetryEvent {\n  type: 'other';\n  originalType: string;\n}\n\nexport namespace TelemetryEvent {\n  export namespace Widget {\n    export const Load = 'widget:load';\n    export const Open = 'widget:open';\n    export const Close = 'widget:close';\n    export const LauncherClick = 'widget:launcher:click';\n  }\n\n  export namespace User {\n    export const Message = 'user:message';\n    export const MessageStop = 'user:message:stop';\n  }\n\n  export namespace Call {\n    export const Connect = 'call:connect';\n    export const Disconnect = 'call:disconnect';\n  }\n\n  export namespace Assistant {\n    export const Message = 'assistant:message';\n    export const Component = 'assistant:component';\n    export const ComponentItemView = 'assistant:component:items:view';\n    export const Suggestions = 'assistant:suggestions';\n  }\n\n  export const CtaClick = 'cta:click';\n\n  export const all = {\n    ...Widget,\n    ...User,\n    ...Call,\n    ...Assistant,\n    CtaClick,\n  };\n\n  export type KnownTelemetryName = typeof all[keyof typeof all];\n\n  export function from(type: string, parameters: Parameters): BaseTelemetryEvent | OtherTelemetryEvent {\n    const knownTypes = Object.values(all);\n\n    if (knownTypes.includes(type)) {\n      return {\n        name: type,\n        parameters,\n      };\n    }\n\n    return {\n      type: 'other',\n      name: 'telemetry:other',\n      originalType: type,\n      parameters,\n    };\n  }\n}\n\nexport type TelemetryStreamEvent = BaseTelemetryEvent | OtherTelemetryEvent;\n","import { Subject } from 'rxjs';\nimport {\n  TelemetryEvent,\n  BaseTelemetryEvent,\n  OtherTelemetryEvent,\n} from '../../types/telemetry/TelemetryEvent';\n\ntype TelemetryStreamEvent = BaseTelemetryEvent | OtherTelemetryEvent;\n\nclass TelemetryBus {\n  private subject = new Subject<TelemetryStreamEvent>();\n  private buffer: TelemetryStreamEvent[] = [];\n  private readonly MAX_BUFFER = 100;\n  private initialized = false;\n\n  emit(event: TelemetryStreamEvent) {\n    if (this.buffer.length >= this.MAX_BUFFER) {\n      this.buffer.shift(); // Drop oldest\n    }\n    this.buffer.push(event);\n    this.subject.next(event);\n  }\n\n  get stream() {\n    this.initializeTelemetryBridge();\n    return this.subject.asObservable();\n  }\n\n  private initializeTelemetryBridge() {\n    if (this.initialized || typeof window === 'undefined') return;\n    this.initialized = true;\n\n    window.addEventListener('copilot:telemetry', (e: any) => {\n      const detail = e.detail || {};\n      const event = TelemetryEvent.from(detail.type || 'telemetry:unknown', detail.parameters || {});\n      this.emit(event);\n    });\n  }\n}\n\nexport const telemetryBus = new TelemetryBus();","import { useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\nimport { telemetryBus } from '../../types/telemetry/TelemetryBus';\nimport { throttleTime, filter } from 'rxjs/operators';\nimport { TelemetryStreamEvent } from '../../types/telemetry/TelemetryEvent';\n\ninterface UseTelemetryOptions {\n  throttleDuration?: number; // ms\n}\n\nexport function useTelemetry(): TelemetryStreamEvent[];\nexport function useTelemetry(groupOrEvent: string, options?: UseTelemetryOptions): TelemetryStreamEvent[];\nexport function useTelemetry(\n  groupOrEvent?: string,\n  options?: UseTelemetryOptions\n): TelemetryStreamEvent[] {\n  const [events, setEvents] = useState<TelemetryStreamEvent[]>([]);\n  const throttleMs = options?.throttleDuration ?? 300;\n\n  useEffect(() => {\n    const sub: Subscription = telemetryBus.stream\n      .pipe(\n        throttleTime(throttleMs),\n        filter(e => {\n          if (!groupOrEvent) return true;\n          if (typeof e.name !== 'string') return false;\n          return e.name === groupOrEvent || e.name.startsWith(groupOrEvent + ':');\n        })\n      )\n      .subscribe(event => {\n        setEvents(prev => [...prev, event].slice(-100));\n      });\n\n    return () => sub.unsubscribe();\n  }, [groupOrEvent, throttleMs]);\n\n  return events;\n}\n","import { useEffect } from 'react';\nimport { useCopilot } from './useCopilot';\n\ninterface Options {\n  unsetOnUnmount?: boolean;\n  idOrIndex?: string | number;\n}\n\nexport const useCopilotContext = (\n  context: Record<string, any>,\n  options?: Options\n) => {\n  const { setContext, unsetContext } = useCopilot(options?.idOrIndex);\n\n  useEffect(() => {\n    setContext?.(context);\n\n    return () => {\n      if (options?.unsetOnUnmount) {\n        unsetContext?.();\n      }\n    };\n  }, [setContext, unsetContext, context, options?.unsetOnUnmount]);\n};"],"names":["useState","useEffect","createContext","useContext","_jsx","Subject","throttleTime","filter"],"mappings":"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"}