{"version":3,"file":"index.cjs.js","sources":["../src/core/waitForCopilot.ts","../src/core/CopilotInstanceManager.ts","../src/types/CopilotTypes.ts","../src/components/CopilotProvider.tsx","../src/components/Copilot.tsx","../src/core/getCopilotInstance.ts"],"sourcesContent":["import type { CopilotAPI } from '../types/CopilotTypes';\n\nexport const waitForCopilot = (\n  botName: string,\n  timeout = 5000,\n  interval = 100\n): Promise<CopilotAPI | null> => {\n  return new Promise((resolve) => {\n    if (typeof window === 'undefined') return resolve(null);\n\n    let tries = 0;\n    const maxTries = Math.ceil(timeout / interval);\n\n    const check = () => {\n      const copilotFn = (window as any)[botName];\n      const isReady = (window as any)[`_${botName}_ready`];\n\n      if (typeof copilotFn && isReady) {\n        const copilotAPI: CopilotAPI = {\n          show: () => copilotFn(\"event\", \"open\"),\n          hide: () => copilotFn(\"event\", \"close\"),\n          tools: {\n            add: (tools) => copilotFn.tools?.add?.(tools),\n            remove: (name) => copilotFn.tools?.remove?.(name),\n            removeAll: () => copilotFn.tools?.removeAll?.(),\n          },\n          users: {\n            set: (user) => copilotFn.users?.set?.(user),\n            unset: () => copilotFn.users?.unset?.(),\n          },\n        };\n\n        return resolve(copilotAPI);\n      }\n\n      if (++tries >= maxTries) {\n        console.warn(`[${botName}] Copilot not ready after timeout.`);\n        return resolve(null);\n      }\n\n      setTimeout(check, interval);\n    };\n\n    check();\n  });\n};","import type { CopilotAPI } from '../types/CopilotTypes';\n\nclass CopilotInstanceManager {\n  private instances = new Map<string, CopilotAPI>();\n\n  set(id: string, instance: CopilotAPI) {\n    this.instances.set(id, instance);\n  }\n\n  get(id: string): CopilotAPI | null {\n    return this.instances.get(id) || null;\n  }\n\n  has(id: string): boolean {\n    return this.instances.has(id);\n  }\n\n  getAll(): Record<string, CopilotAPI> {\n    return Object.fromEntries(this.instances.entries());\n  }\n}\n\nexport const copilotInstances = new CopilotInstanceManager();","export enum CopilotMode {\n    SINGLE = 'single',\n    MULTI = 'multi',\n  }\n  \n  export type ToolParameter = {\n    type: string;\n    description?: string;\n  };\n  \n  export type ToolDefinition = {\n    name: string;\n    description: string;\n    parameters?: {\n      type: 'object';\n      properties: Record<string, ToolParameter>;\n      required?: string[];\n    };\n    timeout?: number;\n    handler: (args: Record<string, any>) => Promise<any> | any;\n  };\n  \n  export type CopilotAPI = {\n    show?: () => void;\n    hide?: () => void;\n    tools?: {\n      add?: (tool: ToolDefinition | ToolDefinition[]) => void;\n      remove?: (name: string) => void;\n      removeAll?: () => void;\n    };\n    users?: {\n      set?: (user: Record<string, any>) => void;\n      unset?: () => void;\n    };\n  };","import React, { useEffect } from 'react';\nimport { waitForCopilot } from '../core/waitForCopilot';\nimport { copilotInstances } from '../core/CopilotInstanceManager';\nimport { CopilotMode } from '../types/CopilotTypes';\nimport { SafeBotName } from '../types/SafeBotName';\n\ntype SharedProps = {\n  mode?: CopilotMode;\n  children: React.ReactNode;\n};\n\n// SINGLE MODE\ntype SingleInstanceProps = {\n  token: string;\n  config?: Record<string, any>;\n  scriptUrl?: string;\n  botName?: SafeBotName<string>;\n} & SharedProps & { mode?: CopilotMode.SINGLE };\n\n// MULTI MODE\ntype MultiInstanceProps = {\n  instances: {\n    token: string;\n    config?: Record<string, any>;\n    scriptUrl?: string;\n    botName?: SafeBotName<string>;\n  }[];\n} & SharedProps & { mode: CopilotMode.MULTI };\n\ntype Props = SingleInstanceProps | MultiInstanceProps;\n\nconst injectCopilotScript = (\n  mode: CopilotMode,\n  token: string,\n  config: Record<string, any> = {},\n  scriptUrl?: string,\n  botName: string = 'copilot'\n) => {\n  const scriptId = `copilot-loader-script${botName === 'copilot' ? '' : `.${botName}`}`;\n  if (document.getElementById(scriptId)) return;\n\n  const inlineScript = document.createElement('script');\n  inlineScript.id = scriptId;\n  inlineScript.type = 'application/javascript';\n  inlineScript.innerHTML = `\n    (function(w,d,s,o,f,js,fjs){\n      w[o]=w[o]||function(){\n        (w[o].q=w[o].q||[]).push(arguments);\n      };\n      js=d.createElement(s), fjs=d.getElementsByTagName(s)[0];\n      js.id=o;\n      js.src=\"${scriptUrl ?? 'https://script.copilot.live/v1/copilot.min.js'}?tkn=${token}\";\n      js.async=1;\n      js.referrerPolicy=\"origin\";\n      fjs.parentNode.insertBefore(js,fjs);\n    })(window,document,\"script\",\"${botName}\");\n\n    ${botName}(\"init\", ${JSON.stringify(config)}, function () {\n      window[\"_${botName}_ready\"] = true;\n    });\n  `;\n\n  waitForCopilot(botName).then((copilot) => {\n    if (copilot) {\n      copilotInstances.set(mode === CopilotMode.MULTI ? botName : 'default', copilot);\n    }\n  });\n\n  document.body.appendChild(inlineScript);\n};\n\nexport const CopilotProvider = (props: Props) => {\n  const mode = props.mode ?? CopilotMode.SINGLE;\n\n  useEffect(() => {\n    if (mode === CopilotMode.MULTI && 'instances' in props) {\n      props.instances.forEach(({ token, config = {}, scriptUrl, botName = 'Copilot' }) => {\n        injectCopilotScript(mode,token, config, scriptUrl, botName);\n      });\n    } else if ('token' in props) {\n      injectCopilotScript(mode,props.token, props.config, props.scriptUrl, props.botName);\n    }\n  }, [props]);\n\n  return <>{props.children}</>;\n};","import React, { useEffect } from 'react';\nimport { copilotInstances } from '../core/CopilotInstanceManager';\nimport type { ToolDefinition } from '../types/CopilotTypes';\n\ntype Props = {\n  tools?: ToolDefinition | ToolDefinition[];\n  botName?: string;\n};\n\nexport const Copilot = ({ tools, botName = 'default' }: Props) => {\n  useEffect(() => {\n    const copilot = copilotInstances.get(botName);\n    if (!copilot || !tools) return;\n\n    if (typeof copilot.tools?.add === 'function') {\n      copilot.tools.add(tools);\n      const count = Array.isArray(tools) ? tools.length : 1;\n      console.log(`[Copilot:${botName}] Registered ${count} tool(s)`);\n    } else {\n      console.warn(`[Copilot:${botName}] tools.add() not available yet`);\n    }\n  }, [tools || botName]);\n\n  return null;\n};","import { copilotInstances } from './CopilotInstanceManager';\nimport type { CopilotAPI } from '../types/CopilotTypes';\n\nexport const getCopilotInstance = (instanceId = 'default'): CopilotAPI | null =>\n  copilotInstances.get(instanceId);"],"names":["CopilotMode","useEffect","_jsx","_Fragment"],"mappings":"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"}